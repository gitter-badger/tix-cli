#!/bin/bash
#
# This script ($HOME/.tixrc) runs at the start of the tix-cli initiation and exports all variables used by the package.
# Users or scripts may write variables to this file with the following command:
# echo 'export VARIABLE_NAME="VARIABLE_VALUE"' >>${HOME}/.tixrc

### --PLATFORM--
### Figure out what platform this OS this is and standardize it

PLATFORM="unknown"  ### The name of the platform
PNAME="unknown"     ### The general name of the platform (unix / windows)

unix_name=$(uname)
shopt -s nocasematch
case "$unix_name" in
  *unix*)
    PLATFORM="unix"
    ;;
  *linux*)
    PLATFORM="linux"
    ;;
  *freebsd*)
    PLATFORM="freebsd"
    ;;
  *darwin*)
    PLATFORM="osx"
    ;;
  *windows*|*ming*)
    PLATFORM="windows"
    ;;
esac

case "$PLATFORM" in
  linux|unix|freebsd|osx)
  PNAME="unix"
  ;;
  windows)
  PNAME="windows"
  ;;
  *)
  >&2 echo "Unable to classify the system OS -> uname: $unix_name, PLATFORM: $PLATFORM"
  exit 1
esac


### --OS INFO--
### Export all OS high level info here

export PLATFORM
export PNAME


### --ANSI COLOR CODES--
### Export all ANSI color codes

export NC='\033[0m'         #NO COLOR
export BLACK='\033[0;30m'
export RED='\033[0;31m'
export GREEN='\033[0;32m'
export BROWN_ORANGE='\033[0;33m'
export BLUE='\033[0;34m'
export PURPLE='\033[0;35m'
export CYAN='\033[0;36m'
export LIGHT_GRAY='\033[0;37m'
export DARK_GRAY='\033[1;30m'
export LIGHT_RED='\033[1;31m'
export LIGHT_GREEN='\033[1;32m'
export YELLOW='\033[1;33m'
export LIGHT_BLUE='\033[1;34m'
export LIGHT_PURPLE='\033[1;35m'
export LIGHT_CYAN='\033[1;36m'
export WHITE='\033[1;37m'

#printf "I ${RED}love${NC} Stack Overflow\n"
#echo -e "I ${RED}love${NC} Stack Overflow\n"

### --URLs--
### Store any commonly used URLs here

export GITHUB_URL_BASE="https://github.com"
export GITHUB_URL_TIX="$GITHUB_URL_BASE/TixInc"
export GITHUB_URL_CLI="$GITHUB_URL_TIX/tix-cli"
export GITHUB_URL_JS="$GITHUB_URL_TIX/tixinc-js"
export GITHUB_URL_NET="$GITHUB_URL_TIX/tixinc-net"
export GITHUB_URL_FONTS="$GITHUB_URL_BASE/powerline/fonts.git"

### --PATHS--
### All paths are absolute.
### ROOT suffix => directory, PATH suffix => file


### SYSTEM PATHS
CHROME_PATH="unknown"
if [ "$PNAME" = "windows" ]; then
  CHROME_PATH="C:\Program Files (x86)\Google\Chrome\Application\chrome.exe"
elif [ "$PLATFORM" = "osx" ]; then
  CHROME_PATH="$(osascript -e 'POSIX path of (path to application "Chrome")')Contents/MacOS/Google Chrome"
fi
export CHROME_PATH

export TEMP_ROOT="$TMP/tix_temp"

### LOCAL PATHS
export INSTALL_ROOT="${HOME}"
export SSH_ROOT="${HOME}/.ssh"
export NPMRC_PATH="${HOME}/.npmrc"
export CONFIG_PATH="${INSTALL_ROOT}/.tixrc"
export LOCAL_ROOT="${INSTALL_ROOT}/local"
export LOG_PATH="${LOCAL_ROOT}/tix.log"
export LOCAL_CONFIG_ROOT="${LOCAL_ROOT}/config"
export RES_CONFIG_PATH="${LOCAL_CONFIG_ROOT}/res.config"
export LOCAL_BIN_ROOT="${LOCAL_ROOT}/bin"
export LOCAL_CHROME_ROOT="${LOCAL_ROOT}/chrome"
export LOCAL_FONTS_ROOT="${LOCAL_ROOT}/fonts"

### Prepend path with ./local/bin
if ! grep -q "${LOCAL_BIN_ROOT}" <<< "$PATH" ; then
  export PATH="$LOCAL_BIN_ROOT:$PATH"
fi

### TOOL PATHS
export NODE_MODULES_ROOT="${LOCAL_BIN_ROOT}/node_modules"
export RIMRAF_PATH="${NODE_MODULES_ROOT}/rimraf/rimraf.js"
export NODE_EXE_PATH="${LOCAL_BIN_ROOT}/node.exe"

### SRC PATHS
export SRC_ROOT="${INSTALL_ROOT}/src"
export SRC_BIN_ROOT="${SRC_ROOT}/bin"
export SRC_ZIP_ROOT="${SRC_ROOT}/zip"


### MODULE PATHS
export MODULE_ROOT="${INSTALL_ROOT}/tixinc"

export CLI_ROOT="${LOCAL_ROOT}/tix-cli"
export CLI_PATH="${CLI_ROOT}/tix-cli.js"

export AUTOMATION_ROOT="${MODULE_ROOT}/automation"
export EXT_ROOT="${MODULE_ROOT}/automation"
export CONFIG_ROOT="${MODULE_ROOT}/automation"
export CLIENT_ROOT="${MODULE_ROOT}/automation"
export SERVER_ROOT="${MODULE_ROOT}/automation"
export CLASSIC_ROOT="${MODULE_ROOT}/automation"
export JS_ROOT="${MODULE_ROOT}/tixinc-js"
export NET_ROOT="${MODULE_ROOT}/tixinc-net"

export NET_SELFHOST_ROOT="${NET_ROOT}/Tix.Web.SelfHost"
export NET_PROJECT_PATH="${NET_SELFHOST_ROOT}/Tix.Web.SelfHost.csproj"

export BUILD_ROOT="${MODULE_ROOT}/build"
export NET_BUILD_ROOT="${BUILD_ROOT}/tixinc-net"
export JS_BUILD_ROOT="${BUILD_ROOT}/tixinc-js"

export ARTIFACTS_ROOT="${MODULE_ROOT}/artifacts"
export NET_ARTIFACTS_ROOT="${ARTIFACTS_ROOT}/tixinc-net"
export JS_ARTIFACTS_ROOT="${ARTIFACTS_ROOT}/tixinc-js"

export RELEASE_ROOT="${MODULE_ROOT}/release"

export GYP_ROOT="${MODULE_ROOT}/gyp"
export NODE_GYP_ROOT="${MODULE_ROOT}/node-gyp"
export GYP_DEPLOY_LOG="${MODULE_ROOT}/gyp.log"



