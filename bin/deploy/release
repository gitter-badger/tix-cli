#!/bin/bash
#
# Deploys a specific set of code across projects

set -e

. "$HOME/.tixrc"

latest=false
destination_path="release"
js_revision=""
net_revision=""

usage_short="${CYAN}Usage: release [-l] [-d destination-path] [-j js-revision] [-n net-revision]"
usage_long="$usage_short\n-l: Deploy latest across all libraries."
usage_long="$usage_long\n-d: Optional destination path (defaults to release)."
usage_long="$usage_long\n-j: tixinc-js revision to deploy."
usage_long="$usage_long\n-n: tixinc-net revision to deploy.${NC}"

usage_short="$usage_short\nUse -h to get supported command information.${NC}"

options=":ld:j:n:"
shopt -u nocasematch
OPTIND=1
while getopts "$options" opt ; do
    case "$opt" in
    l ) # deploys latest annotated version for both
      latest=true
      ;;
    d ) # destination path
      destination_path="$OPTARG"
      ;;
    j ) # js_revision
      js_revision=$OPTARG
      ;;
    n ) # net_revision
      net_revision=$OPTARG
      ;;
    h )
      >&2 echo -e "$usage_long" && exit 1
      exit 0
      ;;
    \?)
      >&2 echo -e "Unknown option: -$OPTARG"
      >&2 echo -e "$usage_short"
      exit 1
      ;;
    : )
      >&2 echo -e "Missing option argument for -$OPTARG"
      >&2 echo -e "$usage_short"
      exit 1
      ;;
    * )
      >&2 echo -e "Unimplemented option: -$OPTARG" && exit 1
      >&2 echo -e "$usage_short"
      exit 1
    esac
done
shift $((OPTIND-1))

if [ "$latest" = true ] ; then
  >&2 echo -e "${BLUE}--latest (-l) flag specified, getting the latest annotated tagged versions of tixinc-js and tixinc-net--${NC}"
  js_revision=$(revisions -l tixinc-js)
  net_revision=$(revisions -l tixinc-net)
  >&2 echo -e "${BLUE}--Using tixinc-js $js_revision and tixinc-net $net_revision--${NC}"
fi

if [ "$js_revision" = "" ] ; then
  >&2 echo -e "${RED}--tixinc-js (-j) revision string is mandatory.  Use \"revisions -m tixinc-js\" to see recent versions--${NC}" && exit 1
fi
if [ "$net_revision" = "" ] ; then
  >&2 echo -e "${RED}--tixinc-net (-n) revision string is mandatory.  Use \"revisions -m tixinc-net\" to see recent versions--${NC}" && exit 1
fi


release_name="net_$net_revision-js_$js_revision"
release_path="$destination_path/$release_name.7z"

>&2 echo -e "--Building and packaging release $release_name--"
deploy-net "$net_revision"
deploy-js "$js_revision"
deploy-startup

>&2 echo -e "--Packaging release--"
mkdirp "$RELEASE_ROOT"

pushd "$MODULE_ROOT" >/dev/null
  rimraf "$release_path"
  #cmd //c "mklink /J C:\\tixinc tixinc"
  #pushd /c/tixinc >/dev/null
    # 7zip the built artifacts using max compression and multithreading
    7za a -t7z "$release_path" ./artifacts/* -m0=lzma2 -mx=9 -aoa -mfb=64 -md=32m -ms=on
  #popd >/dev/null
  #cmd //c "rmdir C:\\tixinc"
popd >/dev/null
>&2 echo -e "${GREEN}--Release packaged successfully at $release_path--${NC}"
